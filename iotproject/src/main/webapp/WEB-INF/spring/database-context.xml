<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.2.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<context:annotation-config />
	
	<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"  />
	<context:property-placeholder location="classpath:mapping-chars.properties" ignore-unresolvable="true"  />
	
	<context:component-scan base-package="com.iot.dao,com.iot.daoimpl" />
	<bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"></bean>
	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />  
  
   	<!-- <bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
	 -->	 
	 <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.iot.pojo" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="format_sql">true</prop>
				<prop key="use_sql_comments">true</prop>
 				<!-- <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory</prop> 
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
 				<prop key="net.sf.ehcache.configurationResourceName">ehcache.xml</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop> -->
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.default_batch_fetch_size">500</prop>
				<prop key="hibernate.max_fetch_depth">5</prop>
				<prop key="hibernate.jdbc.batch_size">1000</prop>
				<prop key="hibernate.use_outer_join">true</prop>
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
				<prop key="hibernate.search.default.indexBase">c:\\onevibetemp\\onevibe\\index</prop> 								
			</props>
		</property>				
	</bean>



	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	
	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	  	<property name="driverClass" value="${database.driver}" />
	    <property name="jdbcUrl" value="${database.url}" />
		<property name="user" value="${database.user}" />
		<property name="password" value="${database.password}" />
	    <property name="initialPoolSize"><value>50</value></property>
	    <property name="minPoolSize"><value>50</value></property>
	    <property name="maxPoolSize"><value>300</value></property>
	    <property name="idleConnectionTestPeriod"><value>200</value></property>
	    <property name="acquireIncrement"><value>3</value></property>
	    <property name="numHelperThreads"><value>3</value></property>
	 	<!--<property name="maxStatements"><value>0</value></property>
	    <property name="maxStatementsPerConnection"><value>0</value></property> -->
	    	    
	</bean>		

</beans>
